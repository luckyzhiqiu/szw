//
<server,sessionID,game,netMsg>
methodName=netMsg[0];//方法名
userID=netMsg[1];//用户ID
tick=netMsg[2];//通行证
itemID=netMsg[3];


if(!game.checkTick(userID,tick))//通行证校验失败
{
	//回复
	game.sendMsg
	(
		sessionID,
		arr(methodName+"Result",0)
	);
	exit();
}


	//修改行数据
	user=game.rd.updateRow
	(
		game.cnn,"user","id",userID,"*",
		//修改回调
		##<user,game>
			@link methodName,sessionID,userID,itemID;
			
			json=json_decode(user.json);
			
			decorateTable=game.table.decorate;
			debug(decorateTable);
			row=decorateTable.getRowFromColName("itemID",itemID);
			
			if(empty(row))
			{
				//回复
				game.sendMsg
				(
					sessionID,
					arr(methodName+"Result",-99)//ID无效
				);
				return(0);//不修改
			}
			if(!exist(json.item,itemID))
			{
				//回复
				game.sendMsg
				(
					sessionID,
					arr(methodName+"Result",-87)//没有道具
				);
				return(0);//不修改
				
			}
			
			type=row.getValFromColName("type");
			
			map=ref(json.decorate.map);
			map[type]=itemID;
			
			
	
			

			//保存
			user.json=json_encode(json);
			//回复
			game.sendMsg
			(
				sessionID,
				arr(methodName+"Result",1,map)
			);
			
			return(1);//修改
		
		##.,
		//修改完成回调
		##<row,userData>
			//...
		##.,
		//解锁后回调
		##<row,userData>
			//...
		##.,
		game,//自定义数据userData
		1000//加锁时间（毫秒），例如：1000
	);
	


if(empty(user))//用户不存在
{
	//回复
	game.sendMsg
	(
		sessionID,
		arr(methodName+"Result",-1)
	);
	exit();
}
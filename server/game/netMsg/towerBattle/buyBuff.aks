//
<server,sessionID,game,netMsg>
methodName=netMsg[0];//方法名
userID=netMsg[1];//用户ID
tick=netMsg[2];//通行证
buffID=netMsg[3];//buffID

if(!game.checkTick(userID,tick))//通行证校验失败
{
	//回复
	game.sendMsg
	(
		sessionID,
		arr(methodName+"Result",0)
	);
	exit();
}


//修改行数据
user=game.rd.updateRow
(
	game.cnn,"user","id",userID,"*",
	//修改回调
	##<user,game>
		@link methodName,sessionID,buffID,userID;
		
		
		json=json_decode(user.json);
		
		
		towerBattle=ref(json.towerBattle);
		buffArr=towerBattle.buffArr;
		buyBuff=ref(towerBattle.buyBuff);
		

		
		if(buyBuff==0)
		{
			waterBattleBuffTable=game.table.waterBattleBuff;
			row=waterBattleBuffTable.getRowFromColName("id",buffID);
			needGold=number(row.getValFromColName("gold"));
			needCoin=row.getValFromColName("coin");
			gold=ref(user.gold);
			gold2=ref(user.gold2);
			towerBattleToken=ref(user.towerBattleToken);
			if(number(gold)+number(gold2)<needGold)
			{
				//回复
				game.sendMsg
				(
					sessionID,
					arr(methodName+"Result",-5)//gold不足
				);
				return(0);//不修改
				
			}	
			if(number(towerBattleToken)<number(needCoin))
			{
				//回复
				game.sendMsg
				(
					sessionID,
					arr(methodName+"Result",-3)//代币不足
				);
				return(0);//不修改
				
			}
			if(arrFindNumberKey(buffArr,buffID)<0)
			{
				//回复
				game.sendMsg
				(
					sessionID,
					arr(methodName+"Result",-4)//不在可选buff
				);
				return(0);//不修改
				
			}
			
			if(number(gold)<needGold)
			{
				gold2=number(gold2)-(needGold-number(gold));
				gold=0;
			}else
			{
				gold=number(gold)-needGold;
			}
			
			//流水
			if(needGold!=0)
			{
				allGold=number(gold)+number(gold2);//元宝余额
				game.saveResIO(userID,48,0,0,needGold,allGold);//过关斩将购买状态(type,itemID,（0=消耗，1=获得）,count,allGold)
			}

			towerBattleToken=number(towerBattleToken)-number(needCoin);
			
			type=row.getValFromColName("type");
			add=row.getValFromColName("add");
			
			if(number(type)==1)//回血
			{
				hp=ref(towerBattle.hp);
				maxHp=towerBattle.me.hp;		
				hp=number(hp)+number(maxHp)*number(add)/10000;
				if(number(hp)>number(maxHp))
				{
					hp=maxHp;
				}
				
			}else if(number(type)==2)//加攻击
			{
				attackC=ref(towerBattle.attackPlus);
				attackC=number(attackC)+number(add);
				
			}else if(number(type)==3)//加暴击
			{
				skillPlus=ref(towerBattle.skillPlus);
				skillPlus=number(skillPlus)+number(add);
			}	
			buyBuff=buffID;//标记已买
			
		
			
		}else
		{
			//回复
			game.sendMsg
			(
				sessionID,
				arr(methodName+"Result",-2)//已买
			);
			return(0);//不修改
		}			
	
		
		
			
		//保存
		user.json=json_encode(json);
		
		//回复
		game.sendMsg
		(
			sessionID,
			arr(methodName+"Result",1,user.gold,user.gold2,user.towerBattleToken,towerBattle.hp,towerBattle.attackPlus,towerBattle.skillPlus,buyBuff)
		);
		
		return(1);//修改
	
	##.,
	//修改完成回调
	##<row,userData>
		//...
	##.,
	//解锁后回调
	##<row,userData>
		//...
	##.,
	game,//自定义数据userData
	1000//加锁时间（毫秒），例如：1000
);
if(empty(user))//用户不存在
{
	//回复
	game.sendMsg
	(
		sessionID,
		arr(methodName+"Result",-1)
	);
}
//获取章节信息
<server,sessionID,game,netMsg>
methodName=netMsg[0];//方法名
userID=netMsg[1];//用户ID
tick=netMsg[2];//通行证

if(!game.checkTick(userID,tick))//通行证校验失败
{
	//回复
	game.sendMsg
	(
		sessionID,
		arr(methodName+"Result",0)
	);
	exit();
}

user=game.rd.updateRow
(
	game.cnn,"user","id",userID,"*",
	//修改回调
	##<user,game>
		@link methodName,sessionID;
		chapterSign=number(user.chapterSign);//章节标记:0=未看;1=已看;
		chapterID=number(user.chapterID);//章节ID
		// barrierID=number(user.barrierID);//关卡ID
		// sceneID=number(user.sceneID);//场景ID
		
		info=dict();
		//章节信息
		chapterInfo=game.storyMgr.chapterArr[chapterID];
		info.chapter=chapterInfo.row.getObj(arr("name","story","storyPic","background"));
		//关卡信息
		barrierInfoArr=arr();
		barrierArr=chapterInfo.barrierArr;
		c=size(barrierArr);
		i=0;while(i<c)
		{
			barrierRow=barrierArr[i].row;
			barrierInfo=barrierRow.getObj(arr("name","type","num"));
			bossID=int(barrierRow.getValFromColName("bossID"));
			if(bossID>0)//boss关卡
			{
				boss=game.table.boss.getRowFromColName("id",bossID);
				bossName=boss.getValFromColName("name");//boss名
				bossHead=boss.getValFromColName("head");//boss头像
				barrierInfo.bossName=bossName;
				barrierInfo.bossHead=bossHead;
			}
			push(barrierInfoArr,barrierInfo);
			++i;
		}
		info.barrierInfoArr=barrierInfoArr;
		
		//回复
		game.sendMsg
		(
			sessionID,
			arr(methodName+"Result",1,info)
		);
		
		if(chapterSign==0)//未看
		{
			user.chapterSign=1;
			return(1);//修改
		}
		else//已看
		{
			return(1);//不修改
		}
	##.,
	//修改完成回调
	##<row,userData>
		//...
	##.,
	//解锁后回调
	##<row,userData>
		//...
	##.,
	game,//自定义数据userData
	1000//加锁时间（毫秒），例如：1000
);
if(empty(user))//用户不存在
{
	//回复
	game.sendMsg
	(
		sessionID,
		arr(methodName+"Result",-1)
	);
}

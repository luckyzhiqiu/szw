//经营恢复
<server,sessionID,game,netMsg>
methodName=netMsg[0];//方法名
userID=netMsg[1];//用户ID
tick=netMsg[2];//通行证
type=int(netMsg[3]);//经营类型：0=商业；1=农业；2=征兵；
count=int(netMsg[4]);//数量

if(!game.checkTick(userID,tick))//通行证校验失败
{
	//回复
	game.sendMsg
	(
		sessionID,
		arr(methodName+"Result",0)
	);
	exit();
}

if(type<0||type>=3)//恢复类型无效
{
	//回复
	game.sendMsg
	(
		sessionID,
		arr(methodName+"Result",-2)
	);
	exit();
}

//修改行数据
user=game.rd.updateRow
(
	game.cnn,"user","id",userID,"*",
	//修改回调
	##<user,game>
		@link methodName,sessionID,type,count;
		json=json_decode(user.json);
		itemDict=json.item;//道具字典
		
		//查询道具类型
		itemID=8;//道具ID
		table=game.table;
		row=table.item.getRowFromColName("id",itemID);
		itemType=number(row.getValFromColName("type"));
		if(itemType!=5)//道具类型必须5
		{
			//回复
			game.sendMsg
			(
				sessionID,
				arr(methodName+"Result",-3)
			);
			return(0);//不修改
		}
		
		//扣除数量
		rowLevel=table.level.getRowFromColName("level",user.level);
		eRP1max=number(rowLevel.getValFromColName("ERP1max"));
		count=limit(count,0,eRP1max);
		num=game.numMgr.subItem(itemID,count,itemDict);//返回数量
		if(num==-1)//数量不足扣除失败
		{
			//回复
			game.sendMsg
			(
				sessionID,
				arr(methodName+"Result",-5)
			);
			return(0);//不修改
		}
		
		if(type==0)
		{
			useHero=json.makeMoney;//经营:商业
		}
		else if(type==1)
		{
			useHero=json.makeFood;//经营:农业
		}
		 else if(type==2)
		{
			useHero=json.makeSoldier;//经营:征兵
		}
		
		//恢复轮数时间
		dt=useHero.dt*1000;//每轮间隔时间（毫秒）
		time=dt*count;//减少轮数时间

		//保存
		useHero.recvCount+=count;
		user.json=json_encode(json);
		
		//回复
		game.sendMsg
		(
			sessionID,
			arr(methodName+"Result",1,count,useHero)
		);
		return(1);//修改
	##.,
	//修改完成回调
	##<row,userData>
		//...
	##.,
	//解锁后回调
	##<row,userData>
		//...
	##.,
	game,//自定义数据userData
	1000//加锁时间（毫秒），例如：1000
);
if(empty(user))//用户不存在
{
	//回复
	game.sendMsg
	(
		sessionID,
		arr(methodName+"Result",-1)
	);
}

//活动管理器
@class ActivityMgr<game>
	self.game=game;
	
	//查询周期性活动状态，返回：0=活动未开始；1=活动进行中；2=活动领奖中；3=活动结束或不存在；
	@member getActivityStatus
	<
		activityID//活动ID
	>
		game=self.game;
		global_var=game.global_var;
		rushLoop=global_var.rushLoop;
		activityMap=rushLoop.activityMap;
		if(!exist(activityMap,activityID))//活动结束或不存在
		{
			return(3);
		}
		activity=activityMap[activityID];
		rushLoopBt=rushLoop.bt;//阶段开始时间
		ct=time();//当前时间（秒）
		dt=ct-rushLoopBt;//阶段已过时间
		if(dt<activity.bt)//活动未开始
		{
			return(0);
		}
		if(dt<(activity.bt+activity.dt))//活动进行中
		{
			return(1);
		}
		if(dt<(activity.bt+activity.dt+activity.rt))//活动领奖中
		{
			return(2);
		}
		return(3);//活动结束或不存在
	@member.
	
	//更新限时任务数据
	@member updateLimitTask<limitTask>
		game=self.game;
		global_var=game.global_var;
		rushLoop=global_var.rushLoop;
		if(limitTask.bt==rushLoop.bt)exit();
		structMgr=game.structMgr;
		clean(limitTask);
		structMgr_upgradeObj(structMgr,"LimitTask",limitTask);
		limitTask.bt=rushLoop.bt;//更新限时任务阶段时间
	@member.
	
	//查询百废待兴活动状态，返回：0=活动未开始；1=活动进行中；2=活动领奖中；3=活动结束
	@member getBuildActivityStatus
		return(1);//活动进行中
		// game=self.game;
		// //
		// global_var=game.global_var;
		// gameServerVar=global_var.gameServer;
		// serverBt=strtotime(gameServerVar.bt);//开服时间
		// //
		// buildEventTable=game.table.buildEvent;
		// row=buildEventTable.getRow(0);
		// activityBt=dateStrToSeconds(row.getValFromColName("bt"));//活动开始时间
		// activityDt=dateStrToSeconds(row.getValFromColName("dt"));//活动持续时间
		// activityRt=dateStrToSeconds(row.getValFromColName("rt"));//活动排名领奖时间
		
		// ct=time();
		// dt=ct-serverBt;
		// if(dt<activityBt)//活动未开始
		// {
			// return(0);
		// }
		// else if(dt<(activityBt+activityDt))//活动进行中
		// {
			// return(1);
		// }
		// else if(dt<(activityBt+activityDt+activityRt))//活动领奖中
		// {
			// return(2);
		// }
		// else//活动结束
		// {
			// return(3);
		// }
	@member.
@class.